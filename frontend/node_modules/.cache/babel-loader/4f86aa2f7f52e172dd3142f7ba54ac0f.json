{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/code/evergreen/frontend/src/frontend/components/AddQuestionPage.js\";\nimport React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport EvergreenNavbar from './EvergreenNavbar';\nimport { Link } from 'react-router-dom';\nimport Toast from 'react-bootstrap/Toast';\nimport { set } from 'mongoose';\nimport { newQuestion } from '../util/question';\nimport questions from '../evergreen_data/questions';\n\nconst Signup = () => {\n  const [showToast, setShowToast] = useState(false);\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [url, setURL] = useState('');\n  const [isMarkdownDescription, setIsMarkdownDescription] = useState(false);\n  const [description, setDescription] = useState('');\n  const [isMarkdownSolution, setIsMarkdownSolution] = useState(false);\n  const [solution, setSolution] = useState('');\n  const [isMarkdownNotes, setIsMarkdownNotes] = useState(false);\n  const [notes, setNotes] = useState('');\n\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n    let booleanValue;\n\n    switch (name) {\n      case 'title':\n        setTitle(value);\n        break;\n\n      case 'category':\n        setCategory(value);\n        break;\n\n      case 'url':\n        setURL(value);\n        break;\n\n      case 'isMarkdownDescription':\n        booleanValue = value === 'true';\n        setIsMarkdownDescription(!booleanValue);\n        break;\n\n      case 'description':\n        setDescription(value);\n        break;\n\n      case 'isMarkdownSolution':\n        booleanValue = value === 'true';\n        setIsMarkdownSolution(!booleanValue);\n        break;\n\n      case 'solution':\n        setSolution(value);\n        break;\n\n      case 'isMarkdownNotes':\n        booleanValue = value === 'true';\n        setIsMarkdownNotes(!booleanValue);\n        break;\n\n      case 'notes':\n        setNotes(value);\n        break;\n    }\n  };\n\n  const handleSubmit = async () => {\n    const question = {\n      title,\n      category,\n      url,\n      isMarkdownDescription,\n      description,\n      isMarkdownSolution,\n      solution,\n      isMarkdownNotes,\n      notes\n    };\n\n    try {\n      const newQuestions = await newQuestion(question);\n      console.log(newQuestion);\n      setTitle('');\n      setCategory('');\n      setURL('');\n      setIsMarkdownDescription(false);\n      setDescription('');\n      setIsMarkdownSolution(false);\n      setSolution('');\n      setIsMarkdownNotes(false);\n      setNotes('');\n    } catch (err) {}\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EvergreenNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"Form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handleSubmit();\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 33\n    }\n  }, \"Add A Question\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formTitle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, \"Title\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"title\",\n    value: title,\n    onChange: handleChange,\n    type: \"input\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formCategory\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"category\",\n    value: category,\n    onChange: handleChange,\n    type: \"input\",\n    placeholder: \"Category\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formURL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"URL\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"url\",\n    value: url,\n    onChange: handleChange,\n    type: \"input\",\n    placeholder: \"URL\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"isMarkdownDescription\",\n    value: isMarkdownDescription,\n    onChange: handleChange,\n    type: \"switch\",\n    id: \"is-markdown-description\",\n    label: \"Render Text As MarkDown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 33\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"description\",\n    value: description,\n    onChange: handleChange,\n    className: \"Textbox-control\",\n    as: \"textarea\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"isMarkdownSolution\",\n    value: isMarkdownSolution,\n    onChange: handleChange,\n    type: \"switch\",\n    id: \"is-markdown-solution\",\n    label: \"Render Text As MarkDown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 33\n    }\n  }, \"Solution\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"solution\",\n    value: solution,\n    onChange: handleChange,\n    className: \"Textbox-control\",\n    as: \"textarea\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Check, {\n    name: \"isMarkdownNotes\",\n    value: isMarkdownNotes,\n    onChange: handleChange,\n    type: \"switch\",\n    id: \"is-markdown-notes\",\n    label: \"Render Text As MarkDown\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"exampleForm.ControlTextarea1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, \"Notes\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"notes\",\n    value: notes,\n    onChange: handleChange,\n    className: \"Textbox-control\",\n    as: \"textarea\",\n    rows: \"3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-success\",\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 29\n    }\n  }, \"Submit\"))))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/macbook/code/evergreen/frontend/src/frontend/components/AddQuestionPage.js"],"names":["React","useState","Form","Button","Container","Row","Col","EvergreenNavbar","Link","Toast","set","newQuestion","questions","Signup","showToast","setShowToast","title","setTitle","category","setCategory","url","setURL","isMarkdownDescription","setIsMarkdownDescription","description","setDescription","isMarkdownSolution","setIsMarkdownSolution","solution","setSolution","isMarkdownNotes","setIsMarkdownNotes","notes","setNotes","handleChange","target","name","value","booleanValue","handleSubmit","question","newQuestions","console","log","err","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport EvergreenNavbar from './EvergreenNavbar';\nimport { Link } from 'react-router-dom';\nimport Toast from 'react-bootstrap/Toast';\nimport { set } from 'mongoose';\nimport { newQuestion } from '../util/question';\nimport questions from '../evergreen_data/questions';\n\nconst Signup = () => {\n    const [showToast, setShowToast] = useState(false);\n\n    const [title, setTitle] = useState('');\n    const [category, setCategory] = useState('');\n    const [url, setURL] = useState('');\n    const [isMarkdownDescription, setIsMarkdownDescription] = useState(false);\n    const [description, setDescription] = useState('');\n    const [isMarkdownSolution, setIsMarkdownSolution] = useState(false);\n    const [solution, setSolution] = useState('');\n    const [isMarkdownNotes, setIsMarkdownNotes] = useState(false);\n    const [notes, setNotes] = useState('');\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        let booleanValue;\n        switch (name) {\n            case 'title':\n                setTitle(value);\n                break;\n            case 'category':\n                setCategory(value);\n                break;\n            case 'url':\n                setURL(value);\n                break;\n            case 'isMarkdownDescription':\n                booleanValue = value === 'true';\n                setIsMarkdownDescription(!booleanValue);\n                break;\n            case 'description':\n                setDescription(value);\n                break;\n            case 'isMarkdownSolution':\n                booleanValue = value === 'true';\n                setIsMarkdownSolution(!booleanValue);\n                break;\n            case 'solution':\n                setSolution(value);\n                break;\n            case 'isMarkdownNotes':\n                booleanValue = value === 'true';\n                setIsMarkdownNotes(!booleanValue);\n                break;\n            case 'notes':\n                setNotes(value);\n                break;\n        }\n    };\n\n    const handleSubmit = async () => {\n        const question = {\n            title,\n            category,\n            url,\n            isMarkdownDescription,\n            description,\n            isMarkdownSolution,\n            solution,\n            isMarkdownNotes,\n            notes,\n        };\n        try {\n            const newQuestions = await newQuestion(question);\n            console.log(newQuestion);\n            setTitle('');\n            setCategory('');\n            setURL('');\n            setIsMarkdownDescription(false);\n            setDescription('');\n            setIsMarkdownSolution(false);\n            setSolution('');\n            setIsMarkdownNotes(false);\n            setNotes('');\n        } catch (err) {}\n    };\n\n    return (\n        <div>\n            <EvergreenNavbar />\n            <Container>\n                <Row>\n                    <Col>\n                        <Form\n                            className=\"Form\"\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                handleSubmit();\n                                return false;\n                            }}\n                        >\n                            <div className=\"page-header\">\n                                <h1>Add A Question</h1>\n                            </div>\n\n                            <Form.Group controlId=\"formTitle\">\n                                <Form.Label>Title</Form.Label>\n                                <Form.Control\n                                    name=\"title\"\n                                    value={title}\n                                    onChange={handleChange}\n                                    type=\"input\"\n                                    placeholder=\"Title\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formCategory\">\n                                <Form.Label>Category</Form.Label>\n                                <Form.Control\n                                    name=\"category\"\n                                    value={category}\n                                    onChange={handleChange}\n                                    type=\"input\"\n                                    placeholder=\"Category\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formURL\">\n                                <Form.Label>URL</Form.Label>\n                                <Form.Control\n                                    name=\"url\"\n                                    value={url}\n                                    onChange={handleChange}\n                                    type=\"input\"\n                                    placeholder=\"URL\"\n                                />\n                            </Form.Group>\n\n                            <Form.Check\n                                name=\"isMarkdownDescription\"\n                                value={isMarkdownDescription}\n                                onChange={handleChange}\n                                type=\"switch\"\n                                id=\"is-markdown-description\"\n                                label=\"Render Text As MarkDown\"\n                            />\n\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Description</Form.Label>\n                                <Form.Control\n                                    name=\"description\"\n                                    value={description}\n                                    onChange={handleChange}\n                                    className=\"Textbox-control\"\n                                    as=\"textarea\"\n                                    rows=\"3\"\n                                />\n                            </Form.Group>\n\n                            <Form.Check\n                                name=\"isMarkdownSolution\"\n                                value={isMarkdownSolution}\n                                onChange={handleChange}\n                                type=\"switch\"\n                                id=\"is-markdown-solution\"\n                                label=\"Render Text As MarkDown\"\n                            />\n\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Solution</Form.Label>\n                                <Form.Control\n                                    name=\"solution\"\n                                    value={solution}\n                                    onChange={handleChange}\n                                    className=\"Textbox-control\"\n                                    as=\"textarea\"\n                                    rows=\"3\"\n                                />\n                            </Form.Group>\n\n                            <Form.Check\n                                name=\"isMarkdownNotes\"\n                                value={isMarkdownNotes}\n                                onChange={handleChange}\n                                type=\"switch\"\n                                id=\"is-markdown-notes\"\n                                label=\"Render Text As MarkDown\"\n                            />\n\n                            <Form.Group controlId=\"exampleForm.ControlTextarea1\">\n                                <Form.Label>Notes</Form.Label>\n                                <Form.Control\n                                    name=\"notes\"\n                                    value={notes}\n                                    onChange={handleChange}\n                                    className=\"Textbox-control\"\n                                    as=\"textarea\"\n                                    rows=\"3\"\n                                />\n                            </Form.Group>\n\n                            <Button\n                                className=\"btn btn-success\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}