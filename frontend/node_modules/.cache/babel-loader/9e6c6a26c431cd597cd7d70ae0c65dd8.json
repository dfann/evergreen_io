{"ast":null,"code":"export const signup = async user => {\n  const response = await fetch('http://localhost:3000/api/users', {\n    method: 'POST',\n    mode: 'cors',\n    // no-cors,\n    body: JSON.stringify(user),\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': 'http://localhost'\n    }\n  });\n  const json = await response.json();\n  return json;\n};\nexport const login = async user => {\n  const response = await fetch('http://localhost:3000/api/session', {\n    method: 'POST',\n    mode: 'cors',\n    // no-cors,\n    body: JSON.stringify(user),\n    credentials: 'include',\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  const json = await response.json();\n  return json;\n};\nexport const logout = () => fetch('http://localhost:3000/api/session', {\n  method: 'DELETE',\n  mode: 'cors',\n  credentials: 'include'\n});\nexport const checkLoggedIn = async preloadedState => {\n  const response = await fetch('http://localhost:3000/api/session', {\n    credentials: 'include'\n  });\n  const {\n    user\n  } = await response.json();\n  let userSession = {\n    session: {\n      userId: null,\n      username: null\n    }\n  };\n\n  if (user) {\n    userSession = {\n      session: user\n    };\n  }\n\n  return userSession;\n};","map":{"version":3,"sources":["/Users/macbook/code/evergreen/frontend/src/frontend/util/session.js"],"names":["signup","user","response","fetch","method","mode","body","JSON","stringify","credentials","headers","json","login","logout","checkLoggedIn","preloadedState","userSession","session","userId","username"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAG,MAAOC,IAAP,IAAgB;AAClC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAD,EAAoC;AAC5DC,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,IAAI,EAAE,MAFsD;AAE9C;AACdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAHsD;AAI5DQ,IAAAA,WAAW,EAAE,SAJ+C;AAK5DC,IAAAA,OAAO,EAAE;AACL,sBAAgB,kBADX;AAEL,qCAA+B;AAF1B;AALmD,GAApC,CAA5B;AAUA,QAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAT,EAAnB;AACA,SAAOA,IAAP;AACH,CAbM;AAcP,OAAO,MAAMC,KAAK,GAAG,MAAOX,IAAP,IAAgB;AACjC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC9DC,IAAAA,MAAM,EAAE,MADsD;AAE9DC,IAAAA,IAAI,EAAE,MAFwD;AAEhD;AACdC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf,CAHwD;AAI9DQ,IAAAA,WAAW,EAAE,SAJiD;AAK9DC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AALqD,GAAtC,CAA5B;AASA,QAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACS,IAAT,EAAnB;AACA,SAAOA,IAAP;AACH,CAZM;AAaP,OAAO,MAAME,MAAM,GAAG,MAClBV,KAAK,CAAC,mCAAD,EAAsC;AACvCC,EAAAA,MAAM,EAAE,QAD+B;AAEvCC,EAAAA,IAAI,EAAE,MAFiC;AAGvCI,EAAAA,WAAW,EAAE;AAH0B,CAAtC,CADF;AAOP,OAAO,MAAMK,aAAa,GAAG,MAAOC,cAAP,IAA0B;AACnD,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,mCAAD,EAAsC;AAC9DM,IAAAA,WAAW,EAAE;AADiD,GAAtC,CAA5B;AAGA,QAAM;AAAER,IAAAA;AAAF,MAAW,MAAMC,QAAQ,CAACS,IAAT,EAAvB;AACA,MAAIK,WAAW,GAAG;AAAEC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,QAAQ,EAAE;AAA1B;AAAX,GAAlB;;AACA,MAAIlB,IAAJ,EAAU;AACNe,IAAAA,WAAW,GAAG;AACVC,MAAAA,OAAO,EAAEhB;AADC,KAAd;AAGH;;AACD,SAAOe,WAAP;AACH,CAZM","sourcesContent":["export const signup = async (user) => {\n    const response = await fetch('http://localhost:3000/api/users', {\n        method: 'POST',\n        mode: 'cors', // no-cors,\n        body: JSON.stringify(user),\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json',\n            'Access-Control-Allow-Origin': 'http://localhost',\n        },\n    });\n    const json = await response.json();\n    return json;\n};\nexport const login = async (user) => {\n    const response = await fetch('http://localhost:3000/api/session', {\n        method: 'POST',\n        mode: 'cors', // no-cors,\n        body: JSON.stringify(user),\n        credentials: 'include',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n    const json = await response.json();\n    return json;\n};\nexport const logout = () =>\n    fetch('http://localhost:3000/api/session', {\n        method: 'DELETE',\n        mode: 'cors',\n        credentials: 'include',\n    });\n\nexport const checkLoggedIn = async (preloadedState) => {\n    const response = await fetch('http://localhost:3000/api/session', {\n        credentials: 'include',\n    });\n    const { user } = await response.json();\n    let userSession = { session: { userId: null, username: null } };\n    if (user) {\n        userSession = {\n            session: user,\n        };\n    }\n    return userSession;\n};\n"]},"metadata":{},"sourceType":"module"}