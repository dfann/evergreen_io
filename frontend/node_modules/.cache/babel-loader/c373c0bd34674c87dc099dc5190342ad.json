{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/code/evergreen/frontend/src/frontend/components/LoginPage.js\";\nimport React, { useState, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport EvergreenNavbar from './EvergreenNavbar';\nimport { Link } from 'react-router-dom';\nimport Toast from 'react-bootstrap/Toast';\nimport SessionContext from '../context/session-context';\n\nconst Signup = () => {\n  const session = useContext(SessionContext);\n  const [showToast, setShowToast] = useState(false);\n  const [resetPasswordEmail, setresetPasswordEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [email, setEmail] = useState('');\n\n  const handleChange = ({\n    target\n  }) => {\n    const {\n      name,\n      value\n    } = target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'resetPasswordEmail':\n        setresetPasswordEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n    }\n  };\n\n  const handleLoginSubmit = async event => {\n    const creds = {\n      email,\n      password\n    };\n    session.login(creds);\n  };\n\n  const handlePasswordReset = async event => {};\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(EvergreenNavbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Toast, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      right: 0\n    },\n    show: showToast,\n    onClose: () => setShowToast(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Toast.Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    className: \"mr-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  }, \"Reset Link Sent\")), /*#__PURE__*/React.createElement(Toast.Body, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, \"A password reset link has been sent to your email address\")), /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      offset: 2,\n      span: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"Form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handleLoginSubmit();\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }\n  }, \"Login\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formUsername\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 33\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    type: \"input\",\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicPassword\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 33\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    type: \"password\",\n    placeholder: \"Password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-success\",\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, \"Submit\"))), /*#__PURE__*/React.createElement(Col, {\n    xs: {\n      offset: 2,\n      span: 5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"Form\",\n    onSubmit: e => {\n      e.preventDefault();\n      handlePasswordReset();\n      setShowToast(true);\n      return false;\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"page-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"I forgot my password\")), /*#__PURE__*/React.createElement(Form.Group, {\n    controlId: \"formBasicEmail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Form.Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 33\n    }\n  }, \"Email address\"), /*#__PURE__*/React.createElement(Form.Control, {\n    name: \"resetPasswordEmail\",\n    value: resetPasswordEmail,\n    onChange: handleChange,\n    type: \"email\",\n    placeholder: \"Enter email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(Form.Text, {\n    className: \"text-muted\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 33\n    }\n  }, \"We'll never share your email with anyone else.\")), /*#__PURE__*/React.createElement(Button, {\n    className: \"btn btn-success\",\n    variant: \"primary\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 29\n    }\n  }, \"Reset My Password\"))))));\n};\n\nexport default Signup;","map":{"version":3,"sources":["/Users/macbook/code/evergreen/frontend/src/frontend/components/LoginPage.js"],"names":["React","useState","useContext","Form","Button","Container","Row","Col","EvergreenNavbar","Link","Toast","SessionContext","Signup","session","showToast","setShowToast","resetPasswordEmail","setresetPasswordEmail","password","setPassword","email","setEmail","handleChange","target","name","value","handleLoginSubmit","event","creds","login","handlePasswordReset","position","top","right","offset","span","e","preventDefault"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport EvergreenNavbar from './EvergreenNavbar';\nimport { Link } from 'react-router-dom';\nimport Toast from 'react-bootstrap/Toast';\nimport SessionContext from '../context/session-context';\n\nconst Signup = () => {\n    const session = useContext(SessionContext);\n\n    const [showToast, setShowToast] = useState(false);\n    const [resetPasswordEmail, setresetPasswordEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n\n    const handleChange = ({ target }) => {\n        const { name, value } = target;\n        switch (name) {\n            case 'email':\n                setEmail(value);\n                break;\n            case 'resetPasswordEmail':\n                setresetPasswordEmail(value);\n                break;\n            case 'password':\n                setPassword(value);\n                break;\n        }\n    };\n\n    const handleLoginSubmit = async (event) => {\n        const creds = {\n            email,\n            password,\n        };\n\n        session.login(creds);\n    };\n\n    const handlePasswordReset = async (event) => {};\n\n    return (\n        <div>\n            <EvergreenNavbar />\n            <Toast\n                style={{ position: 'absolute', top: 0, right: 0 }}\n                show={showToast}\n                onClose={() => setShowToast(false)}\n            >\n                <Toast.Header>\n                    <strong className=\"mr-auto\">Reset Link Sent</strong>\n                </Toast.Header>\n                <Toast.Body>\n                    A password reset link has been sent to your email address\n                </Toast.Body>\n            </Toast>\n            <Container>\n                <Row>\n                    <Col xs={{ offset: 2, span: 3 }}>\n                        <Form\n                            className=\"Form\"\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                handleLoginSubmit();\n                                return false;\n                            }}\n                        >\n                            <div className=\"page-header\">\n                                <h1>Login</h1>\n                            </div>\n\n                            <Form.Group controlId=\"formUsername\">\n                                <Form.Label>Email</Form.Label>\n                                <Form.Control\n                                    name=\"email\"\n                                    value={email}\n                                    onChange={handleChange}\n                                    type=\"input\"\n                                    placeholder=\"Email\"\n                                />\n                            </Form.Group>\n\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Password</Form.Label>\n                                <Form.Control\n                                    name=\"password\"\n                                    value={password}\n                                    onChange={handleChange}\n                                    type=\"password\"\n                                    placeholder=\"Password\"\n                                />\n                            </Form.Group>\n\n                            <Button\n                                className=\"btn btn-success\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                            >\n                                Submit\n                            </Button>\n                        </Form>\n                    </Col>\n                    <Col xs={{ offset: 2, span: 5 }}>\n                        <Form\n                            className=\"Form\"\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                handlePasswordReset();\n                                setShowToast(true);\n                                return false;\n                            }}\n                        >\n                            <div className=\"page-header\">\n                                <h1>I forgot my password</h1>\n                            </div>\n                            <Form.Group controlId=\"formBasicEmail\">\n                                <Form.Label>Email address</Form.Label>\n                                <Form.Control\n                                    name=\"resetPasswordEmail\"\n                                    value={resetPasswordEmail}\n                                    onChange={handleChange}\n                                    type=\"email\"\n                                    placeholder=\"Enter email\"\n                                />\n                                <Form.Text className=\"text-muted\">\n                                    We'll never share your email with anyone\n                                    else.\n                                </Form.Text>\n                            </Form.Group>\n\n                            <Button\n                                className=\"btn btn-success\"\n                                variant=\"primary\"\n                                type=\"submit\"\n                            >\n                                Reset My Password\n                            </Button>\n                        </Form>\n                    </Col>\n                </Row>\n            </Container>\n        </div>\n    );\n};\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}